import java.util.*;
public class Main {
    public static int dfs(int src,int des,int vi[],HashMap<Integer, List<Integer>> mp ){
        if(src==des)
        return 1;
        
        vi[src]=1;
         for (int it:mp.get(src)) {
            if (vi[it]==0) {
                if(dfs(it, des, vi, mp)==1)
                    return 1;
            }
        }
        return 0;
    }
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        
        int node = s.nextInt();
        ArrayList<Integer> li = new ArrayList<>();
        

        for (int i = 0; i < node; i++) {
            li.add(s.nextInt());
        }
        

        ArrayList<ArrayList<Integer>> ed = new ArrayList<>();
        int edge = s.nextInt();
        

        for (int i = 0; i < edge; i++) {
            ArrayList<Integer> nn = new ArrayList<>();
            for (int j = 0; j < 2; j++) {
                nn.add(s.nextInt());
            }
            ed.add(nn);
        }
        
        HashMap<Integer, List<Integer>> mp = new HashMap<>();
        for (int i = 0; i < node; i++) {
            ArrayList<Integer> temp = new ArrayList<>();
            for (int j = 0; j < edge; j++) {
                if (li.get(i).equals(ed.get(j).get(0))) {
                    temp.add(ed.get(j).get(1));
                }
            }
            mp.put(li.get(i), temp);
        }
        
       
    
        int src=s.nextInt();
        int des=s.nextInt();
        int max=0;
        for(int i=0;i<node;i++){
            if(li.get(i)>max)
            max=li.get(i);
        }
        int vi[]=new int[max+1];
        int res=dfs(src,des,vi,mp);
        if(res==1)
        System.out.println("True");
        else
        System.out.println("False");
    }
}
